import fs from 'fs';
export declare function fsAccess(path: string): void;
export declare function fsAppendFile(path: string, data: string): void;
export declare function fsChmod(path: string, mode: string): void;
export declare function fsClose(fd: number): void;
export declare function fsCopyFile(src: string, dest: string): void;
export declare function fsCp(path: string, dest: string): void;
export declare function fsFstat(fd: number): void;
export declare function fsFsync(fd: number): void;
export declare function fsFtruncate(fd: number, len: number): void;
export declare function fsFutimes(fd: number, atime: Date, mtime: Date): void;
export declare function fsLink(src: string, dest: string): void;
export declare function fsLstat(path: string): void;
export declare function fsMkdir(path: string): void;
export declare function fsStat(path: string): void;
export declare function fsOpen(path: string, flags: string, mode: number): void;
export declare function fsOpendir(path: string): void;
export declare function fsRead(fd: number, buffer: Buffer, offset: number, length: number, position: number): void;
export declare function fsReaddir(path: string): void;
export declare function fsReadFile(path: string): void;
export declare function fsRealpath(path: string): void;
export declare function fsRename(oldPath: string, newPath: string): void;
export declare function fsRmdir(path: string): void;
export declare function fsRm(path: string): void;
export declare function fsWatchFile(path: string, options: any, listener: (curr: fs.Stats, prev: fs.Stats) => void): void;
export declare function fsWrite(fd: number, buffer: Buffer, offset: number, length: number, position: number): void;
export declare function fsWriteFile(path: string, data: string): void;
export declare function fsAccessSync(path: string): void;
export declare function fsAppendFileSync(path: string, data: string): void;
export declare function fsCloseSync(fd: number): void;
export declare function fsCopyFileSync(src: string, dest: string): void;
export declare function fsCpSync(path: string, dest: string): void;
export declare function fsFstatSync(fd: number): void;
export declare function fsFsyncSync(fd: number): void;
export declare function fsFtruncateSync(fd: number, len: number): void;
export declare function fsFutimesSync(fd: number, atime: Date, mtime: Date): void;
export declare function fsMkdirSync(path: string): void;
export declare function fsOpenSync(path: string, flags: string, mode?: number): number | undefined;
export declare function fsOpendirSync(path: string): fs.Dir | undefined;
export declare function fsReadSync(fd: number, buffer: Buffer, offset: number, length: number, position: number): number | undefined;
export declare function fsReaddirSync(path: string): string[] | undefined;
export declare function fsReadFileSync(path: string): Buffer<ArrayBufferLike> | undefined;
export declare function fsRealpathSync(path: string): string | undefined;
export declare function fsRenameSync(oldPath: string, newPath: string): void;
export declare function fsRmdirSync(path: string): void;
export declare function fsRmSync(path: string): void;
export declare function fsStatSync(path: string): fs.Stats | undefined;
export declare function fsWriteSync(fd: number, buffer: Buffer, offset: number, length: number, position: number): number | undefined;
export declare function fsWriteFileSync(path: string, data: string): void;
export declare function fsWatchFileSync(path: string, options: any, listener: (curr: fs.Stats, prev: fs.Stats) => void): void;
